// Storages.tjs - パスの初期化

//	リソースのあるディレクトリ名/XP3アーカイブ名
var resourceList	= [ "bg", "bgm", "fg", "image", "event", "others", "override",
						"rule", "scenario", "sound", "video", "voice" ];

@if(DEBUG)
resourceList.add("debug");
@endif

@if(__STRAGES_OVERRIDE_DEFINED__==0)
@set(__STRAGES_OVERRIDE_DEFINED__=1)
Storages.org_isExistentStorage = Storages.isExistentStorage;
Storages.isExistentStorage = function(storage)
{
	if( storage === void ) return false;
	if( storage == null ) return false;
	if( storage.trim() == "" ) return false;
	
	return org_isExistentStorage(...);
	
} incontextof Storages;
@endif

//	読み込み元をどうするか(ディレクトリからか、xp3アーカイブからか)
Storages.addAutoPath(System.exePath+"plugin/");
@if(!FROM_XP3)
{
	var	base	= System.exePath + "data/";
	Plugins.link("fstat.dll");
	for(var i=0; i<resourceList.count; i++)
	{
		var	dir = resourceList[i];
		if( dir[dir.length-1] != "/" )
			dir += "/";
//		dm("found: "+base+dir);
		if(! Storages.isExistentDirectory(base + dir))
			continue;
		Storages.addAutoPath(base + dir);
		dm("add auto path: "+base + dir);
		var	files	= Storages.dirlist(base + dir);
		for(var i=0; i<files.count; i++)
		{
			var	file	= files[i];
			if(file == ".parts/" || (file[0] != "." && file[0] != "~" && file[file.length-1] == "/"))
				resourceList.add(dir + file);
		}
	}
	Plugins.unlink("fstat.dll");
}
@endif
@if(FROM_XP3)
{
	for(var i=0; i<resourceList.count; i++)
		useArchiveIfExists(resourceList[i]+".xp3");

	//	個別にxp3化しないフォルダは autopath に追加
	var	addpaths	= [ "others", "scenario", "video", "image" ];
	for(var i=0; i<addpaths.count; i++)
		Storages.addAutoPath(addpaths[i]+"/");
}
@endif

delete resourceList; // 登録したので削除する

//	パッチファイル適用する
//		パッチファイルは System.dataPath+"patches/" に入れられる
Plugins.link("fstat.dll");
if(Storages.isExistentDirectory(System.dataPath))
{
	dm("check patch");
	//	パッチファイルをリストアップ
	var	patchdir	= System.dataPath+"patches/";
	if(!Storages.isExistentDirectory(patchdir))
		Storages.createDirectory(patchdir);
	var	files	= Storages.dirlist(patchdir);
	for(var i=0; i<files.count; i++)
	{
		if(files[i][0] == "." || Storages.extractStorageExt(files[i]) != ".xp3")
		{
			files.erase(i);
			i--;
		}
	}

	//	ファイル名を整列(公開した日付が付いているので、順番に適用するため)
	global.numreg	= new RegExp("patch([0-9]*)");
	files.sort(function(a, b) {
		var	aa	= numreg.exec(a);
		var	ba	= numreg.exec(b);
		return +aa[1] < +ba[1];
	});

	//	並べた順に適用していく
	for(var i=0; i<files.count; i++)
	{
		var	fn	= patchdir + files[i];
		dm("patch["+i+"] = "+fn);
		if(Storages.isExistentStorage(fn))
			Storages.addAutoPath(fn + ">");
	}
	invalidate global.numreg;
	delete global.numreg;
}

